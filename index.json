[{"content":"you have found my website somehow\nyou can find out more about me in the about section\nthere is the now section for my current life in progress\n","date":"2023-08-05","permalink":"/","section":"","summary":"you have found my website somehow","title":""},{"content":" walk-throughing combodo itop \u0026amp; creating a\nliving it service delivery infrastructure introduction # As with Nagios, i dived a week into Combodo iTop solution.\nI had harder time getting into it due to the notions to lean \u0026amp; to consider, inside \u0026amp; outside itop to use it properly.\nSo once again, i\u0026rsquo;d be very grateful if you\u0026rsquo;d consider correcting me if i said someting wrong.\nglossary # Defining mandatory acronyms for this post.\nITSM - IT Service Management\nType of tool usually used by companies to organise \u0026amp; deliver their IT services to their departments or to other companies. They can integrate monitoring tools or a help desk ticketing system for example.\nCMDB - Configuration Management Database\nTerm to define a database used to store \u0026amp; organise the hardware items \u0026amp; the software assets of a company or someone.\nITIL - Information Technology Infrastructure Library\nSet of relevant IT practices describing processes, procedures or actions for IT related operations like system administration or itsm management.\npresentation # Combodo is a 13-year-old french company who created itop, an open source, itil based, itsm \u0026amp; cmdb solution.\nThey are a profit based company, they created 2 non-free versions of itop for business purposes: essentials \u0026amp; professional/enterprise.\nThey also provide free \u0026amp; non-free external software to enhance itop utilisation like a front-end customiser or a network related manager; as weel as consultants.\nitop is typically used by the IT department of a company to organise services \u0026amp; implement a help desk ticketing system to the other departments.\nIt is also used by companies to deliver IT services to other companies as a service provider.\nunderstandings # Reviewing my understanding of itop\u0026rsquo;s main features.\nfundamentals # itop is based on apache, php, graphviz \u0026amp; mysql. However, it can run on nginx instead of apache with extra work.\nThe documentation is made for anyone who is susceptible to use itop.\ncmdb # The cmdb is the core of itop.\nThe cmd works with Objects, which are groups of Instances sharing the same patern.\n(considering the \u0026ldquo;Persons\u0026rdquo; object, each instance of this object would have the same patern: a name, a surname, an age etc.)\nThe cmdb can receive a populated *.csv file to create multiples instances of an object at once. (instead of entering one by one every member of a company for example)\nitop can receive custom objects but their implementation is not guided. The default ones are created without instances.\nObjects \u0026amp; instances are stored in the MySQL database.\nitsm # The itsm is integrated with the ticket management system \u0026amp; will be described using the itil way.\nWhen installing, itop proposes two ways to implement it: to deliver services to departments or to other companies; saw at the end of the presentation.\nThe itsm provides two types of tickets for end users: Users requests \u0026amp; Incidents.\nMandatory objects are needed to use them: Services, Contracts \u0026amp; SLAs.\nHere are their purposes \u0026amp; how they are related.\nServices\nAre defining what is provided by the service provider (IT department or company). Called to generate incidents or to supply users requests. Providers contracts are required.\nContracts\nSplited in Customer \u0026amp; Provider contracts. Customer one defines service(s) provided to/pucharsed by the customer + the SLAs. Provider one links internal ressources (CIs) used for the service(s) provided.\nSLTs - Service Level Target\nDefine metrics agreements between customers \u0026amp; providers. Two by default: TTO - Time To Own: time to take a ticket into account \u0026amp; TTR - Time To Resolve a ticket after creating.\nSLAs - Service Level Agreement\nGroup of SLTs defining the agreement between a provider \u0026amp; a customer for a given set of services.\nWhen a customer creates a ticket, it can select the service amongst the list of services defined for this customer.\nTickets deadlines are computed depending on the SLA signed with the customer.\ndefault objects # Native objects in itop are created during the installation process.\nThey should be used because related to itop principles.\nThe mandatory objects are covered here, many more can be used \u0026amp; discovered exploring itop.\nOrganizations\nCan be used for two purposes: name the different departments of a company when itop is used to deliver IT services within a company, or name the different companies a company is delivering IT services to.\nLocations\nAre used to group objects by geography - servers, organisations etc. A hierachy can be applied, locations can be linked to parents locations (example: inside the company A, there is room A \u0026amp; room B in which have differents servers in racks A \u0026amp; racks B)\nPersons\nDefine the persons contacts \u0026amp; responsabilities regarding the IT services delivered. Can be deployed using Profiles to quickly assign permissions (to the members of a department or a company).\nTeams\nUsefull to define permissions easier - all the HR \u0026amp; finance teams can access to\u0026hellip; -. Can also help the customer to communicate using the ticketing system.\nCIs - Configuration Items\nDescribe hardware devices: racks, pdus, network devices, servers, personal computers, hypervisors, vms etc. Templates are available for a large type of CIs.\nSoftware Installed\nPresent to easily index software installed on devices, licences \u0026amp; so on.\nServices\nObject used to define what actions or access is delivered as a service to a customer. Can be subcategorised - service A contains sub-service B \u0026amp; sub-service C.\nobjects agencement # Objects are related to each others by different means.\nI made graphs to show the links between them, or tried to.\nGraphs are generated using the following rules:\nRectangles are highest objects. Rounded objects are those receiving links. Text in lowercaps are instructions, uppercaps are objects name. Persons integrate Teams according to their Roles.\ngraph LR A[Persons] --\u003e|Roles| B(Teams) Teams belongs to Organizations.\ngraph LR A[Teams] --\u003e|belongs to| B(Organizations) Organizations are linked to Locations.\ngraph LR A[Organizations] --\u003e|are located| B(Locations) Regarding to only these objects, links can be created.\n(Persons -\u0026gt; Teams -\u0026gt; Organizations -\u0026gt; Locations)\nBefore doing that, there are links between objects covered in default objects.\nOrganizations are owning CIs. CIs are exposed to Services \u0026amp; are ruled by Provider Contracts. They can be related to Documents \u0026amp; appear in Tickets.\ngraph LR B[Organizations] --\u003e|owning| A(CIs) A --\u003e|exposed to| C(Services) D[Provider Contracts] --\u003e|rule| A A --\u003e|appear in| E(Tickets) A --\u003e|related to| F(Documents) Relations for Documents.\ngraph LR C[Organizations] --\u003e|owning| A(Documents) A --\u003e|used for| D(Contracts) D --\u003e|defining| A A --\u003e|give informations| F(CIs) A --\u003e|linked to| E(Services) All objects have relations to others at some point by different ways.\nIn addition to this, objects\u0026rsquo; instances have their own properties changing the relations between objects according to their needs.\nIt would be meaningless to create decent relations graphs for all objects, since their dependencies \u0026amp; relationships are to massive \u0026amp; could change each instance.\nDo not refer to this graph. Please read above. graph LR subgraph iTop Company View A[Persons] --\u003e|Roles| B(Teams) B --\u003e|parts of| C(Organizations) C --\u003e|are located| I(Locations) C --\u003e|owning| D(CIs) D --\u003e|related to| E D --\u003e|exposed to| G(Services) H(Provider Contracts) --\u003e|rule| D D --\u003e|appear in| F C --\u003e|owning| E(Documents) E --\u003e|used for| H H --\u003e|defining| E E --\u003e|linked to| G E --\u003e|give informations| D A --\u003e|see activity| D A --\u003e|attached to| F(Tickets) J[Other Objects] --\u003e|give properties| D J --\u003e|structure| E end Even though this graph seems valid for the most part, itop has many more objects than the ones covered. Links between them should be discovered \u0026amp; created using the frontend.\nimplementation # This sections will implement itop following a companies charts \u0026amp; an arbitrary infrastructure.\ncompanies charts # itop will be used by two companies: Company A which is the service provider \u0026amp; Company B who use their services.\nHere is the Company A agency graph.\n%%{init: {\"flowchart\": {\"htmlLabels\": false}} }%% flowchart TD subgraph z[Company A Chart - Service Provider] subgraph m[CEO] a[Person A] end subgraph h[Executive Assistant] b[Person B] end subgraph i[Technical Manager] c[Person C] end subgraph j[Network \u0026 Sysadmins] d[Person D] e[Person E] end subgraph k[Work-Study Students] f[Person F] g[Person G] end end m---h m---i i---j i---k style z fill:#fff,stroke:#fff,stroke-width:4px Here is the Company B one.\n%%{init: {\"flowchart\": {\"htmlLabels\": false}} }%% flowchart TD subgraph z[Company B Chart - Consumer] subgraph a[CEO] b[Person H] end subgraph c[Technical Manager] d[Person I] end subgraph e[Sales Manager] f[Person J] end subgraph g[Head of Logistics] h[Person K] end subgraph i[\"Manufacturing Manager\"] j[Person M] end subgraph k[Assistant] m[Person N] end end a---c a---e c---g c---i e---k style z fill:#fff,stroke:#fff,stroke-width:4px All persons in the two companies will have access to an itop interface (in reality it is not necessary).\nrequirements # Here is the itop hardware recommendations from their documentation.\nActivity Recommendations Tickets/monthUsersCIs\u0026lt;200\u0026lt;20\u0026lt;50k\u0026lt;5k\u0026lt;50\u0026lt;200k\u0026gt;5k\u0026gt;50\u0026gt;200k ServersCPUMemoryMySQL DB sizeAll-in-one2vCPU4Gb10GbWeb+MySQL4vCPU8Gb20GbWeb+MySQL8vCPU16Gb50Gb infrastructure # There is 13 people who will potentially use itop in the two companies combined (\u0026lt; 50). The number of CIs will be under 50'000 \u0026amp; the tickets/month under 200.\nThe all-in-one server will be chose with itop \u0026amp; a MySQL server installed.\nNote For a production use, looking for expandability by choosing the seperate solutions would be a better choice. Here is the network infrastructure that will be used.\ngraph TD subgraph company-b[Company B Network] router-b{Router} switch-b[Network Switch] consumer-pc(Consumer Device) apache-b(Apache Server) end subgraph company-a[Company A Network] router-a{Router} switch-a[Network Switch] itop-server(Debian Machine\n2vCPU 4GB) db-server[(MySQL DB\n10GB)] itop(itop Community) apache-a(Apache Server) end wan{WAN} --- router-a \u0026 router-b router-a ---|192.168.122.0/24| switch-a switch-a ---|192.168.122.212| itop-server itop-server -.- db-server \u0026 itop switch-a ---|192.168.122.111| apache-a router-b ---|192.168.1.0/24| switch-b switch-b ---|192.168.1.1| consumer-pc switch-b ---|192.168.1.2| apache-b The Company A is providing an apache web server from their LAN as a service \u0026amp; monitor an other one from the Company B LAN.\ninstallations # I made an installation scripts for itop community \u0026amp; for a mysql server according to itop requirements.\n(yes, i could saved a lot of time not doing this, but foss)\nBoth scripts are interactive \u0026amp; made for debian - tested on debian 11 \u0026amp; 12, source code is on Github.\nThe itop server installation can be done running the following commands.\nmkdir itop_install \u0026amp;\u0026amp; cd itop_install wget https://github.com/xeylou/itop-walkthrough/debian-itop-install.sh chmod +x debian-itop-install.sh ./debian-itop-install.sh Here to install the mysql server.\nmkdir mysql_install \u0026amp;\u0026amp; cd mysql_install wget https://github.com/xeylou/itop-walkthrough/debian-mysql-install.sh chmod +x debian-mysql-install.sh ./debian-mysql-install.sh An external mysql database can be used without this installation script, an full privilieged user for this database is needed to use itop.\nThe installation can be resumed at http://192.168.122.212.\n(highlighted forms are clicked/changed values)\nThe warning says the used php version (latest) is not tested for this itop version by Combodo. (not appening with debian 11 because its repositories has an older php version) The Server Name is localhost because the itop instance \u0026amp; the mysql server are on the same host - can be replaced by the ip address of the external mysql server if using the seperate solution.\nThe Login \u0026amp; the Password was created during the debian-mysql-install.sh script process - asked at the beginning -. The database name found was also created during the installation process. Person C will have admin privilieges for this itop instance, since it is the Technical Manager. (can add more admins after)\nThe Language set is for this user only. Here the Default Language for all users can be changed. Can also be changed by individual users after deploying. Since the Company A acts as a service provider, the second option is chose. The first option should be kept if delivering IT services to company departements. Simple Ticket Management can be chose to get rid of SLTs \u0026amp; SLAs. The Customer Portal is the itop interface but reagenced for users tickets. If not chose, tickets should be created using command-lines method or the rest api. cmdb confirguration # The cmdb (organizations, persons, teams etc.) needs to be configured first.\nDepending on the company/ies \u0026amp; the infrastructure/s sizes, it could take some time to populate.\nExporting \u0026amp; importing csv files is a great option to configure it quickly. Here is a video from itop explaining how to do so (i still think putting mine will be worse).\nSynchronizing csv files (itop server \u0026amp; an editor side) can also be done to avoid entering each modification manually, scheduling this task to. ELDAP \u0026amp; AD services can also be used instead of this method.\nManual objects implementation \u0026amp; modification can also be done. A rest api is also present for external use cases.\nitsm overview # The itsm is following the cmdb configuration: users created, teams, organizations, services, contracts etc.\nExternal User profile for the iTop User object have a dashboard to create requests according to purchased services.\nThe user can change his Phone number, Location according to his company\u0026rsquo;s locations in the cmdb, the language to use or his profile picture.\nIt can also rename his function inside the company or change his password.\nWhen entering in New request, according to default objects, the services can be defined in sub-services to help the end user.\nThe provider has the itop dashboard (administrators like person c or other profiles) to interract with created tickets.\nTo avoid putting a gigantic amount of screenshots to show how the itsm works, here is itop video for that (better than the ones i made i think\u0026hellip;).\nA designer is available to custom the itsm interfaces.\nmonitoring # Once the cmdb is configured, links can be done between hardware \u0026amp; Application Services for the end users.\nThey are created using Contracts (Customer \u0026amp; Provider) with SLAs etc.\nSince itop is an itsm \u0026amp; cmdb solution, it doesn\u0026rsquo;t have a proper monitoring system.\nHowever, itop can integrate nagios for incident management (creating tickets).\nclose # It required a lot of time \u0026amp; effort to make my hands on, it\u0026rsquo;s not incredibly difficult - depends on what you usually do, i guess - but demanding \u0026amp; sort of boring.\nI am comparing it to the nagios experience i had.\nTo keep their customers precious time, they do bootcamps for 140$/h \u0026amp; have paid consultants.\nFor a production or business use, customer may pay for the professional or business itop solutions with consultants to help them integrating itop \u0026amp; keep a lot of time.\nIt is not for every one, an IT guy or more is needed to maintain it \u0026amp; using oql querries \u0026amp; various technos.\nI saw on forums itop could implemente customer\u0026rsquo;s itsm for their need, but the discussion stopped here.\nI also like their blog.\nI am happy that i have found a way to understand itop \u0026amp; the surroundings properly \u0026amp; alone in a week, i hope so.\nThank you for reading.\n","date":"2023-08-05","permalink":"/posts/itop-walkthrough/","section":"Posts","summary":"walk-throughing combodo itop \u0026amp; creating a","title":"combodo itop walk-through"},{"content":"","date":"2023-08-05","permalink":"/series/exploring-monitoring-solutions/","section":"Series","summary":"","title":"Exploring Monitoring Solutions"},{"content":"","date":"2023-08-05","permalink":"/tags/monitoring/","section":"Tags","summary":"","title":"monitoring"},{"content":"","date":"2023-08-05","permalink":"/tags/open-source/","section":"Tags","summary":"","title":"open-source"},{"content":"","date":"2023-08-05","permalink":"/series/","section":"Series","summary":"","title":"Series"},{"content":"","date":"2023-08-05","permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":" understanding Nagios principles \u0026amp; deploying\na monitoring infrastructure using custom scripts introduction # For my work-study, i immersed myself in understanding Nagios for a week.\nHere i expose what i\u0026rsquo;ve learned \u0026amp; what i\u0026rsquo;ve done with it.\nI\u0026rsquo;d be extremely grateful if you\u0026rsquo;d consider correcting me if i said something wrong.\nThis article mainly talks about Nagios as the Nagios Core solution.\npresentation # Nagios Core is an open source, widely used monitoring tool for hosts, applications \u0026amp; services.\nThe company behind Nagios, Nagios Enterprises, afford to make Nagios Core free \u0026amp; open source by their financing policy.\nThey provide non-free solutions to make the Nagios Core utilisation simplified, such as a more sophisticated dashboard - Nagios XI, or a better network implementation - Nagios Network Analyzer.\nThose solutions are improvers for Nagios Core, highly prefered for production use but not essential to use Nagios Core.\nside notes # Nagios Core source code can be found on Github, it is written in C language.\nYou may also consider, regarding your deontology or your use case, using your own metrics collector to serve them into a dashboard - using Prometheus \u0026amp; Grafana for examples.\nnagios principles # Covering the basics of Nagios Core according to monitoring windows \u0026amp; linux hosts with their services.\nfundamentals # Nagios Core need to be installed on a host, bare metal or in a vm - no official docker image available.\nTo monitor hosts, the Nagios server will execute a sequence of commands at a sheduled interval \u0026amp; will define the state of the monitored host/service according to the output of the sequence.\nThis series of checks can be customised according to what service you want to monitor.\nA simple \u0026amp; in use example can be the default HOST STATUS check by Nagios: the Nagios server send an echo request to the host - ping command. If it receive an echo reply back -\u0026gt; HOST STATUS: UP, else -\u0026gt; HOST STATUS: DOWN.\nApart from well-known protocols, to monitor the largest amount of services, Nagios lets its community post their own Projects.\nSince then, the community created \u0026amp; shared their free plugins \u0026amp; add-ons to monitor their needed services on Nagios - all in their Nagios Exchange platform.\nplugins # The commands used to monitor services are called plugins.\nPlugins are located in /usr/local/nagios/libexec/ with their name starting with check_*.\nThese plugins can be used as executable files to quickly check the status of services. Those actions are parts of \u0026ldquo;active monitoring\u0026rdquo;, which are usefull during pre-production tests.\nExample of an active check with check_http plugin.\n/usr/local/nagios/libexec/check_http -h display the help page\nfor the check_http plugin\nFollowing the check_http help page, this check can be executed on a host to check its http response.\n/usr/local/nagios/libexec/check_http -H 192.168.122.15 HTTP OK: HTTP/1.1 200 OK - 10975 bytes in 0.002 second response time |time=0.001620s;;;0.000000 size=10975B;;;0\nadd-ons # Plugins only monitor external metrics.\nTo monitor internal ones like system utilisation (cpu load, ram utilisation, disk usage etc.), Nagios use what they call add-ons.\nAdd-ons are splited software, an agent part is installed on the monitored host waiting for a gathering query \u0026amp; an executable file is on the nagios server to communicate with the agent api.\nThose add-ons often use tokens or passwords to verify the authenticity of the nagios server.\nFrom the Nagios server side, the add-ons will be used as executable files like plugins are.\nnagios configuration files # Nagios *.cfg configuration files are located in /usr/local/nagios/etc/.\n. ├── cgi.cfg ├── htpasswd.users ├── nagios.cfg ├── ressource.cfg └── objects ├── commands.cfg ├── contacts.cfg ├── localhost.cfg ├── printer.cfg ├── switch.cfg ├── templates.cfg ├── timeperiodes.cfg └── windows.cfg Since they are well documented inside \u0026amp; on the web, i\u0026rsquo;ll just outline their purpose.\nThe nagios.cfg is the main Nagios configuration file. It contains informations such as log files location - can be changed, locations of directories or individual hosts configuration files, services update interval \u0026amp; more.\nA standard htpasswd.users is created in the installation process \u0026amp; define the Nagios users passwords.\nCGIs check their cgi.cfg configuration file to gather user \u0026amp; groups permissions \u0026amp; rights. It also contains the path for Nagios frontend files.\nressource.cfg define macros used in hosts configuration files for sensitive informations. Also provides plugins paths - handy for moving plugins or adding custom ones.\n(example of \u0026ldquo;sensitive informations\u0026rdquo;: to monitor non public metrics about a database, it is needed at some point to log into using a username \u0026amp; a password)\nThe configuration files inside the objects directory are used to define commands, contacts, hosts, services etc. (more on that in hosts configuration files)\nhosts configuration files # Nagios monitor hosts by scheduling plugins tasks or calling add-ons and reporting the results on a control panel.\nTo define what checks should be made on which host, Nagios use Object Configuration Files.\nThese are *.cfg configuration files in which you define the host informations \u0026amp; the check_ commands that should be used.\nIt is recommended to create directories to manage your kinds of hosts - create a folder with all the *.cfg files for windows clients, linux servers etc.\nOtherwise, configuration files can be manually added to the nagios.cfg like the localhost.cfg by default.\ndeployment # Demonstration of what is said in how nagios works.\nDeploying an infrastructure based on the system monitoring of a Windows Host (server or client) \u0026amp; a Debian Host.\nnetwork plan # N a g i o s S e 1 r 9 v 2 e . r 1 6 8 . 1 2 2 . 2 0 3 N e W t i w n o d r o k w s S w H i 1 o t 9 s c 2 t h . 1 6 8 . 1 2 2 . 5 3 D e b i a n H 1 o 9 s 2 t . 1 6 8 . 1 2 2 . 1 6 5 windows host # Add-ons are needed to monitor hosts system activity.\nA lot of agents are available for windows \u0026amp; linux hosts. Nagios Cross-Platform Agent (NCPA) will be used because it is still recently maintained - by Nagios Enterprise.\n(note: for community maintained one, NSclient++ for windows \u0026amp; linux seems to be a good choice)\nTo install NCPA, need to start by downloading \u0026amp; executing the agent installer on the host.\nDownload the latest NCPA agent installer Here are the simple following steps for the install.\nBind IP has a default value of 0.0.0.0 to accept every ip address who request metrics - replaced it by the Nagios Server ip address.\nPort \u0026amp; Token can be changed.\ndebian host # NCPA will also be used for the debian host so that the check commands syntax will be the same for both host.\nI made an installation script for the debian agent, source code is on Github for debian 11 \u0026amp; 12.\nmkdir testing \u0026amp;\u0026amp; cd testing wget https://github.com/xeylou/nagios-introduction/debian-ncpa-install.sh chmod +x debian-ncpa-install.sh ./debian-ncpa-install.sh By using it, it will ask you the Nagios Server ip address \u0026amp; a custom token so that only it can gather metrics.\nChanges are made by changing the allowed_hosts \u0026amp; community_string variables in /usr/local/ncpa/etc/ncpa.cfg.\nFor other linux distributions than debian, the ncpa download page can be usefull.\nThe default 5693 port is used to transfer metrics.\nnagios server # The Nagios Server is in my case a Debian machine that host Nagios Core \u0026amp; the Nagios Plugins.\nI made an installation script for those by compiling code from source - tested on debian 11 \u0026amp; 12.\nmkdir testing \u0026amp;\u0026amp; cd testing wget https://github.com/xeylou/nagios-introduction/debian-nagios-install.sh chmod +x debian-nagios-install.sh ./debian-nagios-install.sh Nagios web interface can be reach at http://192.168.122.203/nagios with the username nagiosadmin \u0026amp; the password given at the beginning of the installation.\nCan check the connectivity to the agent on the windows host using the check_ncpa add-on command.\n/usr/local/nagios/libexec/check_ncpa.py -H 192.168.122.53 -t \u0026#39;windows-host\u0026#39; -P 5693 -M system/agent_version OK: Agent_version was [\u0026lsquo;2.4.1\u0026rsquo;]\nFor the debian one (changing values).\n/usr/local/nagios/libexec/check_ncpa.py -H 192.168.122.165 -t \u0026#39;debian-host\u0026#39; -P 5693 -M system/agent_version OK: Agent_version was [\u0026lsquo;2.4.1\u0026rsquo;]\n(note: the -H parameter is the host\u0026rsquo;s hostname or its ip address, -t is for the token created by the host during the agent installation process, -P the used port \u0026amp; -M the called value)\nExample of active monitoring of the cpu load for both - same syntax. Refer to the ncpa documentation to gather other metrics.\n/usr/local/nagios/libexec/check_ncpa.py -H 192.168.122.53 -t \u0026#39;windows-host\u0026#39; -P 5693 -M cpu/percent -w 20 -c 40 -q \u0026#39;aggregate=avg\u0026#39; OK: Percent was 4.70 % | \u0026lsquo;percent\u0026rsquo;=4.70%;20;40;\nHere on the debian host.\n/usr/local/nagios/libexec/check_ncpa.py -H 192.168.122.165 -t \u0026#39;debian-host\u0026#39; -P 5693 -M cpu/percent -w 20 -c 40 -q \u0026#39;aggregate=avg\u0026#39; OK: Percent was 0.00 % | \u0026lsquo;percent\u0026rsquo;=0.00%;20;40;\nTo add the hosts to the nagios web interface for passive monitoring: the Nagios Server requires their hosts .cfg configuration files.\nStarting by creating two directories to organise them: windows-hosts \u0026amp; debian-hosts (see hosts configuration files recommendation).\nmkdir /usr/local/nagios/etc/windows-hosts mkdir /usr/local/nagios/etc/debian-hosts Added them to the /usr/local/nagios/etc/nagios.cfg nagios configuration file.\n47 48 49 50 51 52 53 54 55 56 # You can also tell Nagios to process all config files (with a .cfg # extension) in a particular directory by using the cfg_dir # directive as shown below: cfg_dir=/usr/local/nagios/etc/windows-hosts cfg_dir=/usr/local/nagios/etc/debian-hosts #cfg_dir=/usr/local/nagios/etc/servers #cfg_dir=/usr/local/nagios/etc/printers #cfg_dir=/usr/local/nagios/etc/switches #cfg_dir=/usr/local/nagios/etc/routers These files should define the host using define host and the services to monitor by giving the check_* commands.\nHere is an example of the define host used for monitoring the debian host in /usr/local/nagios/debian-hosts/debian-host.cfg.\n1define host { 2 host_name debian-host 3 address 192.168.122.165 4 check_command check_ncpa!-t \u0026#39;debian-host\u0026#39; -P 5693 -M system/agent_version 5 max_check_attempts 5 6 check_interval 5 7 retry_interval 1 8 check_period 24x7 9 contacts nagiosadmin 10 notification_interval 60 11 notification_period 24x7 12 notifications_enabled 1 13 register 1 14} host_name is used for nagios to identify the host on its interface. The check_command defines the checked parameter for the HOST STATUS.\nHere is an example to implement the cpu load check to the configuration file by defining a service to monitor.\n16define service { 17 host_name debian-host 18 service_description CPU Load 19 check_command check_ncpa!-t \u0026#39;debian-host\u0026#39; -P 5693 -M cpu/percent -w 20 -c 40 -q \u0026#39;aggregate=avg\u0026#39; 20 max_check_attempts 5 21 check_interval 5 22 retry_interval 1 23 check_period 24x7 24 notification_interval 60 25 notification_period 24x7 26 contacts nagiosadmin 27 register 1 28} A command can be used to check errors in your *.cfg configuration files before restarting nagios service. Here an example with the debian host created.\n/usr/local/nagios/bin/nagios -v /usr/local/nagios/etc/debian-hosts/debian-host.cfg Finishing by restarting Nagios system service to make changes take effect.\nsystemctl restart nagios overview # Once logged into the nagios web interface, the hosts status can be see in the Hosts section of the Current Status.\nThe services status are available in the Services one.\n(the configuration files used was made by me \u0026amp; available on my Github)\nclose # I found the nagios documentation quite well explained (using \u0026amp; compiling nagios from source) although sometimes obsolete - relating to discontinued stuff or frustrating - some requirements missing from current repos.\nNagios Core is very very old, when doing my searching i was often finding myself reading forums posts from 2007-2009.\nAnother thought on Nagios Core is that its \u0026ldquo;unalive\u0026rdquo; today. Near nothing need to be changed in the code, because it does what it said on the tin.\nThe only things its team wants to work on now might be their cost solutions. However it\u0026rsquo;s for mission criticial tasks or companies wanted stuff that people charge off.\nThe real power is in the nagiosXI from a reddit user, and i found it sad from.\nOtherwise, i like nagios core flexibility by its check commands \u0026amp; its community that is still alive \u0026amp; contribute to plugins \u0026amp; add-ons.\n","date":"2023-07-25","permalink":"/posts/nagios-introduction/","section":"Posts","summary":"understanding Nagios principles \u0026amp; deploying","title":"introduction to nagios"},{"content":"","date":"2023-07-25","permalink":"/tags/windows/","section":"Tags","summary":"","title":"windows"},{"content":" Note I try to keep this page as up to date as possible.\nYou can always contact me if the last update is too old. Work # I am a second-grade Network \u0026amp; Telecommunication bachelor student at University of Pau and the Adour Region.\nI do a work-study as an Network \u0026amp; System Administrator for a french IT service delivery company.\nFreetime # Exploring \u0026amp; creating Github repos about IT related stuff.\n","date":"2023-07-19","permalink":"/now/","section":"","summary":"Note I try to keep this page as up to date as possible.","title":"Now"},{"content":" Skills # My interests are oriented in networks \u0026amp; telecommunications, enjoying learning new technos on bare metal, using embedded or virtualization (gns3, packet tracer).\nI\u0026rsquo;ve been a linux enthusiast for years, having over 3 years of layer 2-7 administration of gnu/linux distributions for daily use (rhel, debian, alpine, arch, nixos).\nI have a strong background in virtualization \u0026amp; containerization using qemu/kvm, proxmox, gns3, cisco pt, docker + compose \u0026amp; k8s.\nI also love programming using java, python \u0026amp; bash.\nStudy # I have a French high-school bachelor general degree in mathematics \u0026amp; computer science.\nUni student at University of Pau and the Adour Region.\nHobbies # I like learning as much as i can about everything.\nI am an IT privacy \u0026amp; security enthusiast.\n","date":"2023-07-18","permalink":"/about/","section":"","summary":"Skills # My interests are oriented in networks \u0026amp; telecommunications, enjoying learning new technos on bare metal, using embedded or virtualization (gns3, packet tracer).","title":"About"},{"content":"","date":"2022-06-13","permalink":"/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"","date":"0001-01-01","permalink":"/authors/","section":"Authors","summary":"","title":"Authors"},{"content":"","date":"0001-01-01","permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":"0001-01-01","permalink":"/tags/gnu/linux/","section":"Tags","summary":"","title":"gnu/linux"}]